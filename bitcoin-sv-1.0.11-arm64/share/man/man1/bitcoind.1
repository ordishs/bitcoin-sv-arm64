.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.13.
.TH BITCOIND "1" "March 2022" "bitcoind v1.0.11.0" "User Commands"
.SH NAME
bitcoind \- manual page for bitcoind v1.0.11.0
.SH DESCRIPTION
Bitcoin SV version v1.0.11.0\-dev
.SS "Usage:"
.TP
bitcoind [options]
Start Bitcoin SV Daemon
.SH OPTIONS
.HP
\-?
.IP
Print this help message and exit
.HP
\fB\-version\fR
.IP
Print version and exit
.HP
\fB\-alertnotify=\fR<cmd>
.IP
Execute command when a relevant alert is received or we see a really
long fork (%s in cmd is replaced by message)
.HP
\fB\-blocknotify=\fR<cmd>
.IP
Execute command when the best block changes (%s in cmd is replaced by
block hash)
.HP
\fB\-assumevalid=\fR<hex>
.IP
If this block is in the chain assume that it and its ancestors are valid
and potentially skip their script verification (0 to verify all,
default:
000000000000000000e45ad2fbcc5ff3e85f0868dd8f00ad4e92dffabe28f8d2,
testnet:
0000000000327972b8470c11755adf8f4319796bafae01f5a6650490b98a17db)
.HP
\fB\-conf=\fR<file>
.IP
Specify configuration file (default: bitcoin.conf)
.HP
\fB\-daemon\fR
.IP
Run in the background as a daemon and accept commands
.HP
\fB\-datadir=\fR<dir>
.IP
Specify data directory
.HP
\fB\-dbcache=\fR<n>
.IP
Set database cache size in megabytes (4 to 16384, default: 450). The
value may be given in megabytes or with unit (B, KiB, MiB, GiB).
.HP
\fB\-frozentxodbcache=\fR<n>
.IP
Set cache size for database holding a list of frozen transaction outputs
in bytes (default: 128000)
.HP
\fB\-genesisactivationheight\fR
.IP
Set block height at which genesis should be activated. (default:
620538).
.HP
\fB\-loadblock=\fR<file>
.IP
Imports blocks from external blk000??.dat file on startup
.HP
\fB\-maxmempool=\fR<n>
.IP
Keep the resident size of the transaction memory pool below <n>
megabytes (default: 1000,  must be at least 300). The value may
be given in megabytes or with unit (B, kB, MB, GB).
.HP
\fB\-mempoolmaxpercentcpfp=\fR<n>
.IP
Percentage of total mempool size (ram+disk) to allow for low paying
transactions (0..100) (default: 10)
.HP
\fB\-mempoolexpiry=\fR<n>
.IP
Do not keep transactions in the mempool longer than <n> hours (default:
336)
.HP
\fB\-maxmempoolnonfinal=\fR<n>
.IP
Keep the non\-final transaction memory pool below <n> megabytes (default:
50). The value may be given in megabytes or with unit (B, KiB,
MiB, GiB).
.HP
\fB\-mempoolexpirynonfinal=\fR<n>
.IP
Do not keep transactions in the non\-final mempool longer than <n> hours
(default: 672)
.HP
\fB\-persistmempool\fR
.IP
Whether to save the mempool on shutdown and load on restart (default: 1)
.HP
\fB\-threadsperblock=\fR<n>
.IP
Set the number of script verification threads used when validating
single block (0 to 64, 0 = auto, default: 0)
.HP
\fB\-scriptvalidatormaxbatchsize=\fR<n>
.IP
Set size of script verification batch per thread (1 to 255, default:
128)
.HP
\fB\-maxparallelblocks=\fR<n>
.IP
Set the number of block that can be validated in parallel across all
nodes. If additional block arrive, validation of an old block is
terminated. (1 to 100, default: 4)
.HP
\fB\-maxparallelblocksperpeer=\fR<n>
.IP
Set the number of blocks that can be validated in parallel from a single
peer. If peers sends another block, the validation of it is
delayed. (1 to maxparallelblocks, default: 3)
.HP
\fB\-pid=\fR<file>
.IP
Specify pid file (default: bitcoind.pid)
.HP
\fB\-preload=\fR<n>
.IP
If n is set to 1, blockchain state will be preloaded into memory. If n
is 0, no preload will happen. Other values for n are not allowed.
The default value is 0. This option is not supported on Windows
operating systems.
.HP
\fB\-prune=\fR<n>
.IP
Reduce storage requirements by enabling pruning (deleting) of old
blocks. This allows the pruneblockchain RPC to be called to
delete specific blocks, and enables automatic pruning of old
blocks if a target size in MiB is provided. This mode is
incompatible with \fB\-txindex\fR and \fB\-rescan\fR. Warning: Reverting this
setting requires re\-downloading the entire blockchain. (default:
0 = disable pruning blocks, 1 = allow manual pruning via RPC,
>550 = automatically prune block files to stay under the
specified target size in MiB, but still keep the last 288 blocks
to speed up a potential reorg even if this results in the pruning
target being exceeded)Note: Currently achievable prune target is
~100GB (mainnet). Setting the target size too low will not affect
pruning function, but will not guarantee block files size staying
under the threshold at all times.
.HP
\fB\-reindex\-chainstate\fR
.IP
Rebuild chain state from the currently indexed blocks
.HP
\fB\-reindex\fR
.IP
Rebuild chain state and block index from the blk*.dat files on disk
.HP
\fB\-rejectmempoolrequest\fR
.IP
Reject every mempool request from non\-whitelisted peers (default: 1).
.HP
\fB\-sysperms\fR
.IP
Create new files with system default permissions, instead of umask 077
(only effective with disabled wallet functionality)
.HP
\fB\-txindex\fR
.IP
Maintain a full transaction index, used by the getrawtransaction rpc
call (default: 0)
.HP
\fB\-maxmerkletreediskspace\fR
.IP
Maximum disk size in bytes that can be taken by stored merkle trees.
This size should not be less than default size (default:
184549376 bytes). The value may be given in bytes or with unit
(B, kiB, MiB, GiB).
.HP
\fB\-preferredmerkletreefilesize\fR
.IP
Preferred size of a single datafile containing merkle trees. When size
is reached, new datafile is created. If preferred size is less
than size of a single merkle tree, it will still be stored,
meaning datafile size can be larger than preferred size.
(default: 33554432 bytes). The value may be given in bytes or
with unit (B, kiB, MiB, GiB).
.HP
\fB\-maxmerkletreememcachesize\fR
.IP
Maximum merkle trees memory cache size in bytes. For faster responses,
requested merkle trees are stored into a memory cache. (default:
33554432 bytes). The value may be given in bytes or with unit (B,
kiB, MiB, GiB).
.PP
Connection options:
.HP
\fB\-addnode=\fR<ip>
.IP
Add a node to connect to and attempt to keep the connection open
.HP
\fB\-banscore=\fR<n>
.IP
Threshold for disconnecting misbehaving peers (default: 100)
.HP
\fB\-bantime=\fR<n>
.IP
Number of seconds to keep misbehaving peers from reconnecting (default:
86400)
.HP
\fB\-bind=\fR<addr>
.IP
Bind to given address and always listen on it. Use [host]:port notation
for IPv6
.HP
\fB\-blockstallingmindownloadspeed=\fR<n>
.IP
Minimum average download speed (Kbytes/s) we will allow a stalling peer
to fall to during IBD. A value of 0 means stall detection is
disabled (default: 100Kb/s)
.HP
\fB\-broadcastdelay=\fR<n>
.IP
Set inventory broadcast delay duration in millisecond(min: 0, max:
50000)
.HP
\fB\-connect=\fR<ip>
.IP
Connect only to the specified node(s); \fB\-noconnect\fR or \fB\-connect\fR=\fI\,0\/\fR alone to
disable automatic connections
.HP
\fB\-discover\fR
.IP
Discover own IP addresses (default: 1 when listening and no \fB\-externalip\fR
or \fB\-proxy\fR)
.HP
\fB\-dns\fR
.IP
Allow DNS lookups for \fB\-addnode\fR, \fB\-seednode\fR and \fB\-connect\fR (default: 1)
.HP
\fB\-dnsseed\fR
.IP
Query for peer addresses via DNS lookup, if low on addresses (default: 1
unless \fB\-connect\fR/\-noconnect)
.HP
\fB\-externalip=\fR<ip>
.IP
Specify your own public address
.HP
\fB\-forcednsseed\fR
.IP
Always query for peer addresses via DNS lookup (default: 1)
.HP
\fB\-listen\fR
.IP
Accept connections from outside (default: 1 if no \fB\-proxy\fR or
\fB\-connect\fR/\-noconnect)
.HP
\fB\-maxconnections=\fR<n>
.IP
Maintain at most <n> connections to peers (default: 125)
.HP
\fB\-maxreceivebuffer=\fR<n>
.IP
Maximum per\-connection receive buffer in kilobytes (default: 500000).
The value may be given in kilobytes or with unit (B, kB, MB, GB).
.HP
\fB\-maxsendbuffer=\fR<n>
.IP
Maximum per\-connection send buffer in kilobytes (default: 500000). The
value may be given in kilobytes or with unit (B, kB, MB, GB).
.HP
\fB\-maxsendbuffermult=\fR<n>
.IP
Temporary multiplier applied to the \fB\-maxsendbuffer\fR size to allow
connections to unblock themselves in the unlikely situation where
they have become paused for both sending and receiving (default:
10)
.HP
\fB\-factormaxsendqueuesbytes=\fR<n>
.IP
Factor that will be multiplied with excessiveBlockSize to limit the
maximum bytes in all sending queues. If this size is exceeded, no
response to block related P2P messages is sent. (default factor:
4)
.HP
\fB\-maxtimeadjustment\fR
.IP
Maximum allowed median peer time offset adjustment. Local perspective of
time may be influenced by peers forward or backward by this
amount. (default: 4200 seconds)
.HP
\fB\-multistreams\fR
.IP
Enable the use of multiple streams to our peers (default: 1)
.HP
\fB\-multistreampolicies\fR
.IP
List of stream policies to use with our peers in order of preference
(available policies: BlockPriority,Default, default:
BlockPriority,Default)
.HP
\fB\-onlynet=\fR<net>
.IP
Only connect to nodes in network <net> (ipv4 or ipv6)
.HP
\fB\-permitbaremultisig\fR
.IP
Relay non\-P2SH multisig (default: 1)
.HP
\fB\-peerbloomfilters\fR
.IP
Support filtering of blocks and transaction with bloom filters (default:
0)
.HP
\fB\-port=\fR<port>
.IP
Listen for connections on <port> (default: 8333 or testnet: 18333)
.HP
\fB\-proxy=\fR<ip:port>
.IP
Connect through SOCKS5 proxy
.HP
\fB\-proxyrandomize\fR
.IP
Randomize credentials for every proxy connection. (default: 1)
.HP
\fB\-seednode=\fR<ip>
.IP
Connect to a node to retrieve peer addresses, and disconnect
.HP
\fB\-timeout=\fR<n>
.IP
Specify connection timeout in milliseconds (minimum: 1, default: 5000)
.HP
\fB\-upnp\fR
.IP
Use UPnP to map the listening port (default: 0)
.HP
\fB\-whitebind=\fR<addr>
.IP
Bind to given address and whitelist peers connecting to it. Use
[host]:port notation for IPv6
.HP
\fB\-whitelist=\fR<IP address or network>
.IP
Whitelist peers connecting from the given IP address (e.g. 1.2.3.4) or
CIDR notated network (e.g. 1.2.3.0/24). Can be specified multiple
times. Whitelisted peers cannot be DoS banned and their
transactions are always relayed, even if they are already in the
mempool, useful e.g. for a gateway
.HP
\fB\-whitelistrelay\fR
.IP
Accept relayed transactions received from whitelisted peers even when
not relaying transactions (default: 1)
.HP
\fB\-whitelistforcerelay\fR
.IP
Force relay of transactions from whitelisted peers even if they violate
local relay policy (default: 1)
.HP
\fB\-maxuploadtarget=\fR<n>
.IP
Tries to keep outbound traffic under the given target (in MiB per 24h),
0 = no limit (default: 0). The value may be given in megabytes or
with unit (KiB, MiB, GiB).
.PP
Wallet options:
.HP
\fB\-disablewallet\fR
.IP
Do not load the wallet and disable wallet RPC calls
.HP
\fB\-keypool=\fR<n>
.IP
Set key pool size to <n> (default: 1000)
.HP
\fB\-fallbackfee=\fR<amt>
.IP
A fee rate (in BSV/kB) that will be used when fee estimation has
insufficient data (default: 0.0002)
.HP
\fB\-mintxfee=\fR<amt>
.IP
Fees (in BSV/kB) smaller than this are considered zero fee for
transaction creation (default: 0.00001)
.HP
\fB\-paytxfee=\fR<amt>
.IP
Fee (in BSV/kB) to add to transactions you send (default: 0.00)
.HP
\fB\-rescan\fR
.IP
Rescan the block chain for missing wallet transactions on startup
.HP
\fB\-salvagewallet\fR
.IP
Attempt to recover private keys from a corrupt wallet on startup
.HP
\fB\-spendzeroconfchange\fR
.IP
Spend unconfirmed change when sending transactions (default: 1)
.HP
\fB\-usehd\fR
.IP
Use hierarchical deterministic key generation (HD) after BIP32. Only has
effect during wallet creation/first start (default: 1)
.HP
\fB\-upgradewallet\fR
.IP
Upgrade wallet to latest format on startup
.HP
\fB\-wallet=\fR<file>
.IP
Specify wallet file (within data directory) (default: wallet.dat)
.HP
\fB\-walletbroadcast\fR
.IP
Make the wallet broadcast transactions (default: 1)
.HP
\fB\-walletnotify=\fR<cmd>
.IP
Execute command when a wallet transaction changes (%s in cmd is replaced
by TxID)
.HP
\fB\-zapwallettxes=\fR<mode>
.IP
Delete all wallet transactions and only recover those parts of the
blockchain through \fB\-rescan\fR on startup (1 = keep tx meta data e.g.
account owner and payment request information, 2 = drop tx meta
data)
.PP
ZeroMQ notification options:
.HP
\fB\-zmqpubhashblock=\fR<address>
.IP
Enable publish hash block in <address>. For more information see
doc/zmq.md.
.HP
\fB\-zmqpubhashtx=\fR<address>
.IP
Enable publish hash transaction in <address>. For more information see
doc/zmq.md.
.HP
\fB\-zmqpubrawblock=\fR<address>
.IP
Enable publish raw block in <address>. For more information see
doc/zmq.md.
.HP
\fB\-zmqpubrawtx=\fR<address>
.IP
Enable publish raw transaction in <address>. For more information see
doc/zmq.md.
.HP
\fB\-zmqpubinvalidtx=\fR<address>
.IP
Enable publish invalid transaction in <address>. \fB\-invalidtxsink\fR=\fI\,ZMQ\/\fR
should be specified. For more information see doc/zmq.md.
.HP
\fB\-zmqpubremovedfrommempool=\fR<address>
.IP
Enable publish removal of transaction (txid and the reason in json
format) in <address>. For more information see doc/zmq.md.
.HP
\fB\-zmqpubremovedfrommempoolblock=\fR<address>
.IP
Enable publish removal of transaction (txid and the reason in json
format) in <address>. For more information see doc/zmq.md.
.HP
\fB\-zmqpubhashtx2=\fR<address>
.IP
Enable publish hash transaction in <address>. For more information see
doc/zmq.md.
.HP
\fB\-zmqpubrawtx2=\fR<address>
.IP
Enable publish raw transaction in <address>. For more information see
doc/zmq.md.
.HP
\fB\-zmqpubhashblock2=\fR<address>
.IP
Enable publish hash block in <address>. For more information see
doc/zmq.md.
.HP
\fB\-zmqpubrawblock2=\fR<address>
.IP
Enable publish raw block in <address>. For more information see
doc/zmq.md.
.PP
Debugging/Testing options:
.HP
\fB\-uacomment=\fR<cmt>
.IP
Append comment to the user agent string
.HP
\fB\-debug=\fR<category>
.IP
Output debugging information (default: 0, supplying <category> is
optional). If <category> is not supplied or if <category> = 1,
output all debugging information.<category> can be: mempool,
http, bench, zmq, db, rpc, addrman, selectcoins, reindex,
cmpctblock, rand, prune, proxy, mempoolrej, libevent, coindb,
leveldb, txnprop, txnsrc, journal, txnval, netconn, netmsg,
netmsgverb, netmsgall, net, doublespend.
.HP
\fB\-debugexclude=\fR<category>
.IP
Exclude debugging information for a category. Can be used in conjunction
with \fB\-debug\fR=\fI\,1\/\fR to output debug logs for all categories except one
or more specified categories.
.HP
\fB\-help\-debug\fR
.IP
Show all debugging options (usage: \fB\-\-help\fR \fB\-help\-debug\fR)
.HP
\fB\-debugp2pthreadstalls\fR
.IP
Log P2P requests that stall request processing loop for longer than
specified milliseconds (default: disabled)
.HP
\fB\-logips\fR
.IP
Include IP addresses in debug output (default: 0)
.HP
\fB\-logtimestamps\fR
.IP
Prepend debug output with timestamp (default: 1)
.HP
\fB\-maxtxfee=\fR<amt>
.IP
Maximum total fees (in BSV) to use in a single wallet transaction or raw
transaction; setting this too low may abort large transactions
(default: 0.10)
.HP
\fB\-printtoconsole\fR
.IP
Send trace/debug info to console instead of bitcoind.log file
.HP
\fB\-shrinkdebugfile\fR
.IP
Shrink bitcoind.log file on client startup (default: 1 when no \fB\-debug\fR)
.PP
Chain selection options:
.HP
\fB\-testnet\fR
.IP
Use the test chain
.HP
\fB\-regtest\fR
.IP
Enter regression test mode, which uses a special chain in which blocks
can be solved instantly. This is intended for regression testing
tools and app development.
.HP
\fB\-stn\fR
.IP
Use the Scaling Test Network
.PP
Node relay options:
.HP
\fB\-excessiveblocksize=\fR<n>
.IP
Set the maximum block size in bytes we will accept from any source. This
is the effective block size hard limit and it is a required
parameter (0 = unlimited). The value may be given in bytes or
with unit (B, kB, MB, GB).
.HP
\fB\-datacarrier\fR
.IP
Relay and mine data carrier transactions (default: 1)
.HP
\fB\-datacarriersize\fR
.IP
Maximum size of data in data carrier transactions we relay and mine
(default: 4294967295). The value may be given in bytes or with
unit (B, kB, MB, GB).
.HP
\fB\-maxstackmemoryusageconsensus\fR
.IP
Set maximum stack memory usage in bytes used for script verification
we're willing to accept from any source (0 = unlimited) after
Genesis is activated (consensus level). This is a required
parameter. The value may be given in bytes or with unit (B, kB,
MB, GB).
.HP
\fB\-maxstackmemoryusagepolicy\fR
.IP
Set maximum stack memory usage used for script verification we're
willing to relay/mine in a single transaction (default: 100 MB, 0
= unlimited) after Genesis is activated (policy level). The value
may be given in bytes or with unit (B, kB, MB, GB). Must be less
or equal to \fB\-maxstackmemoryusageconsensus\fR.
.HP
\fB\-maxopsperscriptpolicy=\fR<n>
.IP
Set maximum number of non\-push operations we're willing to relay/mine
per script (default: unlimited, 0 = unlimited), after Genesis is
activated
.HP
\fB\-maxtxsigopscountspolicy=\fR<n>
.IP
Set maximum allowed number of signature operations we're willing to
relay/mine in a single transaction (default: unlimited, 0 =
unlimited) after Genesis is activated.
.HP
\fB\-maxstdtxvalidationduration=\fR<n>
.IP
Set the single standard transaction validation duration threshold in
milliseconds after which the standard transaction validation will
terminate with error and the transaction is not accepted to
mempool (min 1ms, default: 3ms)
.HP
\fB\-maxnonstdtxvalidationduration=\fR<n>
.IP
Set the single non\-standard transaction validation duration threshold in
milliseconds after which the non\-standard transaction validation
will terminate with error and the transaction is not accepted to
mempool (min 10ms, default: 1000ms)
.HP
\fB\-maxtxchainvalidationbudget=\fR<n>
.IP
Set the upper limit of unused validation time to add to the next
transaction validated in the chain (min 0ms, default: 50ms)
.HP
\fB\-validationclockcpu\fR
.IP
Use CPU time instead of wall clock time for validation duration
measurement (default: 1)
.HP
\fB\-maxtxsizepolicy=\fR<n>
.IP
Set maximum transaction size in bytes we relay and mine (default: 10 MB,
min: 99999 B, 0 = unlimited) after Genesis is activated. The
value may be given in bytes or with unit (B, kB, MB, GB).
.HP
\fB\-minconsolidationfactor=\fR<n>
.IP
Set minimum ratio between sum of utxo scriptPubKey sizes spent in a
consolidation transaction, to the corresponding sum of output
scriptPubKey sizes. The ratio between number of consolidation
transaction inputs to the number of outputs also needs to be
greater or equal to the minimum consolidation factor (default:
20). A value of 0 disables free consolidation transactions
.HP
\fB\-maxconsolidationinputscriptsize=\fR<n>
.IP
This number is the maximum length for a scriptSig input in a
consolidation txn (default: 150). The value may be given in bytes
or with unit (B, kB, MB, GB).
.HP
\fB\-minconfconsolidationinput=\fR<n>
.IP
Minimum number of confirmations of inputs spent by consolidation
transactions (default: 6).
.HP
\fB\-minconsolidationinputmaturity=\fR<n>
.IP
(DEPRECATED: This option will be removed, use \fB\-minconfconsolidationinput\fR
instead) Minimum number of confirmations of inputs spent by
consolidation transactions (default: 6).
.HP
\fB\-acceptnonstdconsolidationinput=\fR<n>
.IP
Accept consolidation transactions spending non standard inputs (default:
0).
.HP
\fB\-maxscriptsizepolicy\fR
.IP
Set maximum script size in bytes we're willing to relay/mine per script
after Genesis is activated. (default: 500000, 0 = unlimited). The
value may be given in bytes or with unit (B, kB, MB, GB).
.HP
\fB\-maxscriptnumlengthpolicy=\fR<n>
.IP
Set maximum allowed number length we're willing to relay/mine in scripts
(default: 10000, 0 = unlimited) after Genesis is activated. The
value may be given in bytes or with unit (B, kB, MB, GB).
.PP
Block creation options:
.HP
\fB\-blockmaxsize=\fR<n>
.IP
Set maximum block size in bytes we will mine. Size of the mined block
will never exceed the maximum block size we will accept
(\fB\-excessiveblocksize\fR). The value may be given in bytes or with
unit (B, kB, MB, GB). If not specified, the following defaults
are used: Mainnet: 32 MB before 2019\-07\-24 14:00:00 and 128 MB
after, Testnet: 32 MB before 2019\-07\-24 14:00:00 and 128 MB
after.
.HP
\fB\-minminingtxfee=\fR<amt>
.IP
Set lowest fee rate (in BSV/kB) for transactions to be included in block
creation. This is a mandatory setting
.HP
\fB\-invalidateblock=\fR<hash>
.IP
Permanently marks an existing block as invalid as if it violated a
consensus rule (same as InvalidateBlock RPC function). If
specified block header was not received yet, the header will be
ignored when it is received from a peer. This option can be
specified multiple times.
.HP
\fB\-banclientua=\fR<ua>
.IP
Ban clients whose User Agent contains specified string (case
insensitive). This option can be specified multiple times.
.HP
\fB\-allowclientua=\fR<ua>
.IP
Allow clients whose User Agent equals specified string (case
insensitive). This option can be specified multiple times and has
precedence over '\-banclientua'.
.HP
\fB\-blockassembler=\fR<type>
.IP
Set the type of block assembler to use for mining. Supported options are
JOURNALING. (default: JOURNALING)
.HP
\fB\-jbamaxtxnbatch=\fR<max batch size>
.IP
Set the maximum number of transactions processed in a batch by the
journaling block assembler (default: 20000)
.PP
RPC client/server options:
.HP
\fB\-server\fR
.IP
Accept command line and JSON\-RPC commands
.HP
\fB\-rest\fR
.IP
Accept public REST requests (default: 0)
.HP
\fB\-rpcbind=\fR<addr>
.IP
Bind to given address to listen for JSON\-RPC connections. Use
[host]:port notation for IPv6. This option can be specified
multiple times (default: bind to all interfaces)
.HP
\fB\-rpccookiefile=\fR<loc>
.IP
Location of the auth cookie (default: data dir)
.HP
\fB\-rpcuser=\fR<user>
.IP
Username for JSON\-RPC connections
.HP
\fB\-rpcpassword=\fR<pw>
.IP
Password for JSON\-RPC connections
.HP
\fB\-rpcauth=\fR<userpw>
.IP
Username and hashed password for JSON\-RPC connections. The field
<userpw> comes in the format: <USERNAME>:<SALT>$<HASH>. A
canonical python script is included in share/rpcuser. The client
then connects normally using the
rpcuser=<USERNAME>/rpcpassword=<PASSWORD> pair of arguments. This
option can be specified multiple times
.HP
\fB\-rpcport=\fR<port>
.IP
Listen for JSON\-RPC connections on <port> (default: 8332 or testnet:
18332)
.HP
\fB\-rpcallowip=\fR<ip>
.IP
Allow JSON\-RPC connections from specified source. Valid for <ip> are a
single IP (e.g. 1.2.3.4), a network/netmask (e.g.
1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This
option can be specified multiple times
.HP
\fB\-magicbytes=\fR<hexcode>
.IP
Allow users to split the test net by changing the magicbytes. This
option only work on a network different than mainnet. default :
0f0f0f0f
.HP
\fB\-rpcthreads=\fR<n>
.IP
Set the number of threads to service RPC calls (default: 4)
.HP
\fB\-rpccorsdomain\fR=\fI\,value\/\fR
.IP
Domain from which to accept cross origin requests (browser enforced)
.HP
\fB\-rpcwebhookclientnumthreads=\fR<n>
.IP
Number of threads available for submitting HTTP requests to webhook
endpoints. (default: 2, maximum: 16)
.HP
\fB\-invalidcsinterval=\fR<n>
.IP
Set the time limit on the reception of invalid message checksums from a
single node in milliseconds (default: 500ms)
.HP
\fB\-invalidcsfreq=\fR<n>
.IP
Set the limit on the number of invalid checksums received over a given
time period from a single node  (default: 100)
.PP
Orphan txns config :
.HP
\fB\-blockreconstructionextratxn=\fR<n>
.IP
Extra transactions to keep in memory for compact block reconstructions
(default: 100)
.HP
\fB\-maxorphantxsize=\fR<n>
.IP
Keep at most <n> MB of unconnectable transactions in memory (default:
1000 MB). The value may be given in megabytes or with unit (B,
kB, MB, GB).
.HP
\fB\-maxorphansinbatchpercent=\fR<n>
.IP
Maximal number of orphans scheduled for re\-validation as percentage of
max batch size. (1 to 100, default:60)
.HP
\fB\-maxinputspertransactionoutoffirstlayerorphan=\fR<n>
.IP
Maximal number of inputs of a non\-first\-layer transaction that can be
scheduled for re\-validation. (default:5)
.PP
TxnValidator options:
.HP
\fB\-numstdtxvalidationthreads=\fR<n>
.IP
Set the number of 'High' priority threads used to validate standard txns
(dynamically calculated default: 24)
.HP
\fB\-numnonstdtxvalidationthreads=\fR<n>
.IP
Set the number of 'Low' priority threads used to validate non\-standard
txns (dynamically calculated default: 8)
.HP
\fB\-maxstdtxnsperthreadratio=\fR<n>
.IP
Set the max ratio for a number of standard txns per 'High' priority
thread (default: 1000)
.HP
\fB\-maxnonstdtxnsperthreadratio=\fR<n>
.IP
Set the max ratio for a number of non\-standard txns per 'Low' priority
thread (default: 1000)
.HP
\fB\-txnvalidationasynchrunfreq=\fR<n>
.IP
Set run frequency in asynchronous mode (default: 10ms)
.HP
\fB\-txnvalidationschedulestrategy=\fR<strategy>
.IP
Set task scheduling strategy to use in parallel transaction
validation.Available strategies: CHAIN_DETECTOR (legacy),
TOPO_SORT (default)
.HP
\fB\-maxtxnvalidatorasynctasksrunduration=\fR<n>
.IP
Set the maximum validation duration for async tasks in a single run
(default: 10000ms)
.HP
\fB\-maxcoinsviewcachesize=\fR<n>
.IP
Set the maximum cumulative size of accepted transaction inputs inside
coins cache (default: unlimited \-> 0). The value may be given in
bytes or with unit (B, kB, MB, GB).
.HP
\fB\-maxcoinsprovidercachesize=\fR<n>
.IP
Set soft maximum limit of cached coin tip buffer size (default: 1 GB,
minimum: 1 MB). The value may be given in bytes or with unit (B,
kB, MB, GB).
.HP
\fB\-maxcoinsdbfiles=\fR<n>
.IP
Set maximum number of files used by coins leveldb (default: 64).
.HP
\fB\-txnvalidationqueuesmaxmemory=\fR<n>
.IP
Set the maximum memory usage for the transaction queues in MB (default:
2048). The value may be given in megabytes or with unit (B, kB,
MB, GB).
.HP
\fB\-maxpubkeyspermultisigpolicy=\fR<n>
.IP
Set maximum allowed number of public keys we're willing to relay/mine in
a single CHECK_MULTISIG(VERIFY) operation (default: unlimited, 0
= unlimited), after Genesis is activated
.HP
\fB\-maxgenesisgracefulperiod=\fR<n>
.IP
Set maximum allowed number of blocks for Genesis graceful period
(default: 72) where nodes will not be banned for violating
Genesis rules in case the calling node is not yet on Genesis
height and vice versa. Seting 0 will disable Genesis graceful
period. Genesis graceful period range :(GENESIS_ACTIVATION_HEIGHT
\- n |...| GENESIS_ACTIVATION_HEIGHT |...|
GENESIS_ACTIVATION_HEIGHT + n)
.PP
Invalid transactions sink options:
.HP
\fB\-invalidtxsink=\fR<sink>
.IP
Set destination for dumping invalid transactions. Specify separately for
every sink you want to include. Available sinks:FILE, ZMQ, (no
sink by default)
.HP
\fB\-invalidtxfilemaxdiskusage=\fR<n>
.IP
Set maximal disk usage for dumping invalid transactions when using FILE
for the sink. In megabytes. (default: 3000MB) The value may be
given in megabytes or with unit (B, kB, MB, GB).
.HP
\fB\-invalidtxfileevictionpolicy=\fR<policy>
.IP
Set policy which is applied when disk usage limits are reached when
using FILE for the sink. IGNORE_NEW or DELETE_OLD (default:
IGNORE_NEW)
.HP
\fB\-invalidtxzmqmaxmessagesize=\fR<n>
.IP
Set maximal message size for publishing invalid transactions using ZMQ,
in megabytes. (default: 500MB) The value may be given in
megabytes or with unit (B, kB, MB, GB).
.HP
\fB\-maxprotocolrecvpayloadlength=\fR<n>
.IP
Set maximum protocol recv payload length you are willing to accept in
bytes (default 2097152). Value should be bigger than legacy
protocol payload length: 1048576 B and smaller than: 1000000000
B.
.HP
\fB\-recvinvqueuefactor=\fR<n>
.IP
Set maximum number of full size inventory messages that we can store for
each peer (default 3). Inventory message size can be set with
\fB\-maxprotocolrecvpayloadlength\fR. Value should be an integer between
1 and 10 )
.PP
Double\-Spend detection options:
.HP
\fB\-dsnotifylevel\fR
.IP
Set how this node should handle double\-spend notification sending. The
options are: 0 Send no notifications, 1 Send notifications only
for standard transactions, 2 Send notifications for all
transactions. (default: 1)
.HP
\fB\-dsendpointfasttimeout=\fR<n>
.IP
Timeout in seconds for high priority communications with a double\-spend
reporting endpoint (default: 5)
.HP
\fB\-dsendpointslowtimeout=\fR<n>
.IP
Timeout in seconds for low priority communications with a double\-spend
reporting endpoint (default: 60)
.HP
\fB\-dsendpointslowrateperhour=\fR<n>
.IP
The allowable number of timeouts per hour on a rolling basis to a
double\-spend reporting endpoint before we temporarily assume that
endpoint is consistently slow and direct all communications for
it to the slow / low priority queue. Must be between 1 and 60
(default: 3)
.HP
\fB\-dsendpointskiplist=\fR<list of ips>
.IP
A comma separated list of IP addresses for double\-spend endpoints we
should skip sending notifications to. This can be useful if (for
example) we are running a mAPI node locally which will already be
receiving double\-spend notification via ZMQ, then we don't need
to also send such notifications via HTTP.
.HP
\fB\-dsendpointmaxcount=\fR<n>
.IP
Maximum number of endpoint IPs we will consider notifying per
transaction (default: 3)
.HP
\fB\-dsattempttxnremember=\fR<n>
.IP
Limits the maximum number of previous double\-spend transactions the node
remembers. Setting this high uses more memory and is slower,
setting it low increases the chances we may unnecessarily process
and re\-report duplicate double\-spent transactions (default: 1000)
.HP
\fB\-dsattemptnumfastthreads=\fR<n>
.IP
Number of threads available for processing high priority double\-spend
notifications. Note that each additional thread also requires a
small amount of disk space for serialising transactions to.
(default: 2, maximum: 64)
.HP
\fB\-dsattemptnumslowthreads=\fR<n>
.IP
Number of threads available for processing low priority double\-spend
notifications. Note that each additional thread also requires a
small amount of disk space for serialising transactions to.
(default: 2, maximum: 64)
.HP
\fB\-dsattemptqueuemaxmemory=\fR<n>
.IP
Maximum memory usage for the queue of detected double\-spend transactions
(default: 4096MB). The value may be given in megabytes or with
unit (B, kB, MB, GB).
.HP
\fB\-dsdetectedwebhookurl=\fR<url>
.IP
URL of a webhook to notify on receipt of a double\-spend detected P2P
message from another node. For example:
http://127.0.0.1/dsdetected/webhook
.HP
\fB\-dsdetectedwebhookmaxtxnsize=\fR<n>
.IP
Maximum size of transaction to forward to the double\-spend detected
webhook. For double\-spent transactions above this size only the
transaction ID will be reported to the webhook (default: 100MB).
The value may be given in megabytes or with unit (B, kB, MB, GB).
.HP
\fB\-softconsensusfreezeduration\fR
.IP
Set for how many blocks a block that contains transaction spending
consensus frozen TXO will remain frozen before it auto unfreezes
due to the amount of child blocks that were mined after it
(default: 3; note: 0 \- soft consensus freeze duration is disabled
and block is frozen indefinitely).
.PP
Safe\-mode activation options:
.HP
\fB\-disablesafemode\fR
.IP
Disable safemode, override a real safe mode event (default: 0)
.HP
\fB\-safemodewebhookurl=\fR<url>
.IP
URL of a webhook to notify if the node enters safe mode. For example:
http://127.0.0.1/mywebhook
.HP
\fB\-safemodeminblockdifference=\fR<n>
.IP
Minimum number of blocks that fork should be ahead (if positive) or
behind (if negative) of active tip to enter safe mode (default:
\fB\-72\fR)
.HP
\fB\-safemodemaxforkdistance=\fR<n>
.IP
Maximum distance of forks last common block from current active tip to
enter safe mode (default: 1000)
.HP
\fB\-safemodeminforklength=\fR<n>
.IP
Minimum length of valid fork to enter safe mode (default: 3)
.SH COPYRIGHT
Copyright (C) 2009-2021 The Bitcoin Association

Please contribute if you find Bitcoin SV useful. Visit <https://bitcoinsv.io>
for further information about the software.
The source code is available from <https://github.com/bitcoin-sv/bitcoin-sv>.

This is experimental software.
Distributed under the Open BSV software license, see the accompanying file
LICENSE

This product includes software developed by the OpenSSL Project for use in the
OpenSSL Toolkit <https://www.openssl.org> and cryptographic software written by
Eric Young and UPnP software written by Thomas Bernard.
